#!/bin/bash

TIME_OUT=30

# parse options
while getopts ":ht:c" opt
do
	case $opt in
		h)
			cat usage.txt
			exit 0
			;;
		t)
			TIME_OUT=$OPTARG
			;;
		c)
			confirm=true
			;;
		\?)
			echo "Invalid option: -$OPTARG" >&2
			exit 1
			;;
		:)
			echo "Option -$OPTARG requires an argument" >&2
			exit 1
			;;
	esac
done

# check syntax
if [ "$#" -ne $OPTIND ];
then
	echo "No domain specified." >&2
	exit 1
fi

# get domain from args
shift $((OPTIND-1))
domain=$1

# read master password from stdin
echo -n "master password: "
read -s password
echo
if [ "$confirm" = true ]
then
	echo -n "confirm master password: "
	read -s confirmed_password
	echo
	if [ "$confirmed_password" != "$password" ]
	then
		echo "Passwords don't match." >&2
		exit 1
	fi
fi

# generate domain password
echo -n "$domain" | openssl dgst -sha1 -hmac "$password" -binary | openssl enc -A -base64 | head -c 8 #| less

# wait for key press or timeout
read -t $TIME_OUT -s -n1

# delete domain password from screen
echo -ne "\r\033[0K"


